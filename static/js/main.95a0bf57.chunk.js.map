{"version":3,"sources":["components/header.js","components/action.js","components/option.js","components/options.js","components/addOptions.js","components/optionModal.js","components/app.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","subtitle","defaultProps","Action","disabled","hasOption","onClick","handlePick","Option","count","optionTxt","e","handleDeleteOption","Options","handleRemoveAll","options","length","map","option","index","components_option","key","AddOption","state","error","undefined","handleAddOption","preventDefault","target","elements","value","trim","_this","setState","this","onSubmit","type","name","placeholder","React","Component","OptionModal","_ref","selectedOption","clearModal","lib_default","isOpen","contentLabel","onRequestClose","closeTimeoutMS","App","randomNum","Math","floor","random","indexOf","prevState","concat","optionToRemove","filter","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","header","action","addOptions","optionModal","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.95a0bf57.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header=(props)=>(\n    <div className=\"header\">\n    <div className=\"container\">\n    <h1 className=\"header__title\">{props.title}</h1>\n        <h2 className=\"header__subtitle\">{props.subtitle}</h2>\n    </div>\n        \n    \n    </div>\n)\nHeader.defaultProps={\n    title:\"Indecision\",\n    subtitle:\"Put your life in the hands of computer\"\n\n}\nexport default Header","import React from 'react'\n\nconst Action=(props)=>(\n    <div >\n        <button className=\"big-button\" disabled={!props.hasOption} onClick={props.handlePick}>What should i do?</button>\n    \n    </div>\n)\n\nexport default Action ","import React from 'react'\n\nconst Option=(props)=>(\n    <div className=\"option\">\n        <p className=\"option__text\">{props.count}.{props.optionTxt}</p>\n       \n       <button className=\"button button--link\" onClick={(e)=>{props.handleDeleteOption(props.optionTxt)}}> remove </button>\n    \n    </div>\n)\n\nexport default Option","import React from 'react'\nimport Option from './option'\n\nconst Options=(props)=>(\n    <div>\n    <div className=\"widget-header\">\n    <h3 className=\"widget-header__title\">Your Options</h3>\n    <button className=\"button button--link\" onClick={props.handleRemoveAll}>Remove All</button>\n    </div>\n    \n    {props.options.length ===0 && <p className=\"widget__message\">Makku please enter an option</p>}\n\n        {props.options.map((option,index)=>{\n            return( \n                <Option  key={option} count={index +1 } optionTxt={option}\n                handleDeleteOption={props.handleDeleteOption}\n                />   \n        )\n        })}\n    </div>\n)\n\n\nexport default Options","import React from 'react'\n\nclass AddOption extends React.Component{\n    state={\n        error:undefined\n    }\n    handleAddOption=(e)=>{\n        e.preventDefault()\n        const option=e.target.elements.option.value.trim()\n        const error=this.props.handleAddOption(option)\n        this.setState(()=>({\n            error\n        }))\n\n        if(!error){\n            e.target.elements.option.value=''\n        }\n    }\n    render(){\n        return(\n            <div>\n            {this.state.error && <p className=\"add-option-error\">{this.state.error}</p>}\n                <form className=\"add-option\" onSubmit={this.handleAddOption}>\n                <input className=\"add-option__input\" type=\"text\" name=\"option\" placeholder=\"enter here some option\"/>\n                <button className=\"button\">Add Option</button>\n                </form>\n            \n            </div>\n        )\n    }\n}\n\nexport default AddOption","import React from 'react'\nimport Modal from 'react-modal'\n\nconst OptionModal =({selectedOption,clearModal})=>{\n    return(\n        <Modal\n        isOpen={!!selectedOption}\n        contentLabel=\"Selected Option\"\n        onRequestClose={clearModal}\n        closeTimeoutMS={200}\n        className=\"modal\"\n        >\n        \n        <h3 className=\"modal__title\">Selected Option</h3>\n        {selectedOption && <p className=\"modal__body\">{selectedOption}</p>}\n        <button className=\"button\" onClick={clearModal}>okey</button>\n        \n        </Modal>\n    )\n}\n\nexport default OptionModal;","import React from 'react'\nimport Header from './header'\nimport Action from './action'\nimport Options from './options'\nimport AddOption from './addOptions'\nimport OptionModal from './optionModal'\n\n\n class App extends React.Component{\n    \n    state={\n        options:[],\n        selectedOption:undefined\n    }\n\n    componentDidMount(){\n\n        try{\n            const json=localStorage.getItem('opt')\n        const options=JSON.parse(json)\n\n        if(options){\n            this.setState(()=>({\n                options:options\n            }))\n        }\n\n        }catch(e){\n\n        } \n    }\n    componentDidUpdate(prevProps,prevState){\n        if(prevState.options.length !== this.state.options.length){\n            const json=JSON.stringify(this.state.options)\n            localStorage.setItem('opt',json)\n            \n            \n\n            \n        }\n    }\n\n    handleRemoveAll=()=>{\n        // Explicitly return\n        this.setState(()=>({\n            options:[]\n        }))\n    }\n    handlePick=()=>{\n        const randomNum=Math.floor(Math.random()*this.state.options.length)\n        const option=this.state.options[randomNum]\n        \n        this.setState(()=>({\n            selectedOption:option\n        }))\n    }\n\n    handleAddOption=(option)=>{\n        if(!option){\n            return \"Enter valid value to add item\"\n        }else if(this.state.options.indexOf(option)> -1){\n            return \"This item is already exist\"\n        }\n        this.setState((prevState)=>{\n            return{\n                options: prevState.options.concat(option)\n            }\n        }) \n    }\n    handleDeleteOption=(optionToRemove)=>{\n        this.setState((prevState)=>({\n            options:prevState.options.filter((option)=>{\n                return optionToRemove !== option\n            })\n        }))\n        \n        \n    }\n    clearModal=()=>{\n        this.setState(()=>({\n            selectedOption:undefined\n        }))\n    }\n    \n    render(){\n        return(\n            <div >\n            <Header/>\n            <div className=\"container\">\n            <Action\n             hasOption={this.state.options.length !== null && this.state.options.length >0 }\n              handlePick={this.handlePick}\n              />\n              <div className=\"widget\">\n              <Options \n            options={this.state.options}\n             handleRemoveAll={this.handleRemoveAll}\n             handleDeleteOption={this.handleDeleteOption}\n            />\n            <AddOption handleAddOption={this.handleAddOption}/>\n              </div>\n            </div>\n            \n\n            <OptionModal selectedOption={this.state.selectedOption} clearModal={this.clearModal}/>\n            </div>\n        )\n    }\n}\n\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app'\nimport './styles/style.scss'\nimport 'normalize.css/normalize.css'\n\n\n\n  ReactDOM.render(<App/>, document.getElementById('root'));\n  \n  \n  \n\n\n\n\n\n\n\n"],"sourceRoot":""}